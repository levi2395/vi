import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

st.set_page_config(page_title="Zara Sales Dashboard", layout="wide")
sns.set(style="whitegrid")

st.title("üõçÔ∏è Zara Sales Dashboard")
st.markdown("Ph√¢n t√≠ch d·ªØ li·ªáu s·∫£n ph·∫©m Zara: th∆∞∆°ng hi·ªáu, danh m·ª•c, m√πa v·ª• v√† doanh s·ªë.")

# ----------------------------
# Upload d·ªØ li·ªáu
# ----------------------------
st.sidebar.header("üìÇ T·∫£i d·ªØ li·ªáu CSV")
file = st.sidebar.file_uploader("T·∫£i file d·ªØ li·ªáu .csv", type=["csv"])

if file:
    df = pd.read_csv(file)

    st.success("‚úÖ D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c t·∫£i th√†nh c√¥ng.")
    st.dataframe(df.head(), use_container_width=True)

    # Tabs ph√¢n t√≠ch
    tab1, tab2, tab3, tab4 = st.tabs([
        "üìä Th∆∞∆°ng hi·ªáu",
        "üìÅ Danh m·ª•c s·∫£n ph·∫©m",
        "üå¶Ô∏è M√πa v·ª•",
        "üìà Doanh s·ªë & Gi√°"
    ])

    # ====================================
    # Tab 1: Th∆∞∆°ng hi·ªáu
    # ====================================
    with tab1:
        st.subheader("Top 10 Th∆∞∆°ng hi·ªáu c√≥ nhi·ªÅu s·∫£n ph·∫©m nh·∫•t")
        if 'brand' in df.columns:
            brand_counts = df['brand'].value_counts().head(10)
            fig1, ax1 = plt.subplots(figsize=(10, 4))
            sns.barplot(x=brand_counts.index, y=brand_counts.values, palette='viridis', ax=ax1)
            ax1.set_title("Top 10 Th∆∞∆°ng hi·ªáu")
            ax1.set_ylabel("S·ªë l∆∞·ª£ng s·∫£n ph·∫©m")
            ax1.tick_params(axis='x', rotation=45)
            st.pyplot(fig1)
        else:
            st.warning("Kh√¥ng c√≥ c·ªôt 'brand' trong d·ªØ li·ªáu.")

    # ====================================
    # Tab 2: Danh m·ª•c s·∫£n ph·∫©m
    # ====================================
    with tab2:
        st.subheader("Gi√° trung b√¨nh theo danh m·ª•c s·∫£n ph·∫©m")
        if 'Product Category' in df.columns and 'price' in df.columns:
            avg_price = df.groupby("Product Category")['price'].mean().sort_values(ascending=False).head(10)
            fig2, ax2 = plt.subplots(figsize=(10, 4))
            sns.barplot(x=avg_price.index, y=avg_price.values, palette='magma', ax=ax2)
            ax2.set_ylabel("Gi√° trung b√¨nh")
            ax2.set_xlabel("Danh m·ª•c")
            ax2.tick_params(axis='x', rotation=45)
            ax2.set_title("Top 10 Danh m·ª•c theo gi√° trung b√¨nh")
            st.pyplot(fig2)
        else:
            st.warning("Kh√¥ng t√¨m th·∫•y c·ªôt 'Product Category' ho·∫∑c 'price'.")

    # ====================================
    # Tab 3: M√πa v·ª•
    # ====================================
    with tab3:
        st.subheader("Ph√¢n b·ªë doanh s·ªë theo m√πa v·ª•")
        if 'Seasonal' in df.columns and 'Sales Volume' in df.columns:
            fig3, ax3 = plt.subplots(figsize=(8, 4))
            sns.boxplot(data=df, x='Seasonal', y='Sales Volume', palette='Set2', ax=ax3)
            ax3.set_title("Boxplot doanh s·ªë theo m√πa v·ª•")
            ax3.set_xlabel("M√πa v·ª•")
            ax3.set_ylabel("Sales Volume")
            st.pyplot(fig3)
        else:
            st.warning("Kh√¥ng t√¨m th·∫•y c·ªôt 'Seasonal' ho·∫∑c 'Sales Volume'.")

    # ====================================
    # Tab 4: Doanh s·ªë & Gi√° theo th·ªùi gian
    # ====================================
    with tab4:
        col1, col2 = st.columns(2)

        with col1:
            st.subheader("Ph√¢n ph·ªëi doanh s·ªë")
            if 'Sales Volume' in df.columns:
                fig4, ax4 = plt.subplots(figsize=(8, 4))
                sns.histplot(df['Sales Volume'], kde=True, color='skyblue', ax=ax4)
                ax4.set_title("Ph√¢n ph·ªëi Sales Volume")
                ax4.set_xlabel("Sales Volume")
                st.pyplot(fig4)
            else:
                st.warning("Kh√¥ng c√≥ c·ªôt 'Sales Volume'.")

        with col2:
            st.subheader("Xu h∆∞·ªõng gi√° theo th·ªùi gian")
            if 'scraped_at' in df.columns and 'price' in df.columns:
                df['scraped_at'] = pd.to_datetime(df['scraped_at'], errors='coerce')
                price_by_time = df.groupby('scraped_at')['price'].mean().reset_index()

                fig5, ax5 = plt.subplots(figsize=(8, 4))
                sns.lineplot(data=price_by_time, x='scraped_at', y='price', marker='o', ax=ax5)
                ax5.set_title("Gi√° trung b√¨nh theo th·ªùi gian")
                ax5.set_ylabel("Gi√° trung b√¨nh")
                ax5.set_xlabel("Th·ªùi gian")
                ax5.tick_params(axis='x', rotation=45)
                st.pyplot(fig5)
            else:
                st.warning("Kh√¥ng t√¨m th·∫•y c·ªôt 'scraped_at' ho·∫∑c 'price'.")

else:
    st.info("üìå Vui l√≤ng t·∫£i l√™n file d·ªØ li·ªáu CSV ƒë·ªÉ b·∫Øt ƒë·∫ßu.")
